@using NuminaBit.Web.App.Services
@using NuminaBit.Web.App.Services.Interfaces

@inherits LayoutComponentBase

@inject IBasePathService _pathService

<RadzenLayout>
    <RadzenHeader>
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
            <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />
            <RadzenLabel Text="Lineer Kriptoanaliz Sunumu" />
        </RadzenStack>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
        <RadzenPanelMenu>
            <RadzenPanelMenuItem Text="Overview" Icon="home" Path=@(_homePath) Match="NavLinkMatch.All" />
            <RadzenPanelMenuItem Text="DES" Icon="https" Path=@(_desPath) />
            <RadzenPanelMenuItem Text="LAT" Icon="grid_on" Path=@(_latPath) />
            <RadzenPanelMenuItem Text="Equation Builder" Icon="calculate" Path=@(_equationBuilderPath) />
            <RadzenPanelMenuItem Text="Attacks" Icon="swords">
                <RadzenPanelMenuItem Text="3-Round" Icon="counter_3" Path=@(_attack3Path) />
                <RadzenPanelMenuItem Text="5-Round" Icon="counter_5" Path=@(_attack5Path) />
            </RadzenPanelMenuItem>
        </RadzenPanelMenu>
    </RadzenSidebar>
    <RadzenBody>
        <div class="rz-p-4">
            @Body
        </div>
    </RadzenBody>
    <RadzenFooter Style="margin-top:2rem; padding:1rem; text-align:center; font-size:0.9rem; color:#555;">
        © 2025 Hüseyin Eren Demirtaş · TÜBİTAK / BİLGEM / UEKAE
        <br />
        <a href="mailto:huseyinerend1@gmail.com">İletişim</a> ·
        <a href="https://github.com/erend1/NuminaBit" target="_blank">GitHub</a>
    </RadzenFooter>
</RadzenLayout>

@code {
    private bool sidebar1Expanded = true;

    private string _homePath = string.Empty;
    private string _desPath = string.Empty;
    private string _latPath = string.Empty;
    private string _equationBuilderPath = string.Empty;
    private string _attack3Path = string.Empty;
    private string _attack5Path = string.Empty;
    private string _attack8Path = string.Empty;

    protected override void OnInitialized()
    {
        var isInitialized = _pathService.Initialize();

        _homePath = _pathService.GetFullPath(string.Empty);
        _desPath = _pathService.GetFullPath("des");
        _latPath = _pathService.GetFullPath("lat");
        _equationBuilderPath = _pathService.GetFullPath("equation-builder");
        _attack3Path = _pathService.GetFullPath("attack-3-round");
        _attack5Path = _pathService.GetFullPath("attack-5-round");
        _attack8Path = _pathService.GetFullPath("attack-8-round");
    }
}